/*
 * This file was generated by the Gradle 'init' task.
 */

import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'http://play.pvpcraft.cz:8081/repository/devport/'
        credentials {
            username 'pvpc-user'
            password devportPassword
        }
    }

    maven {
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }

    maven {
        url = 'http://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    maven {
        url = 'http://maven.sk89q.com/repo/'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }

    maven {
        url = 'http://ci.emc.gs/nexus/content/groups/aikar/'
    }
}

dependencies {
    shadow 'org.spigotmc:spigot-api:1.16.3-R0.1-SNAPSHOT'

    compile 'space.devport.utils:DevportUtils:3.4.4'
    compile 'org.jetbrains:annotations:19.0.0'
    compile 'com.zaxxer:HikariCP:3.1.0'

    shadow 'com.sk89q.worldguard:worldguard-bukkit:7.0.4'
    shadow 'com.sk89q.worldedit:worldedit-bukkit:7.1.0'

    shadow 'me.clip:placeholderapi:2.10.9'
    shadow 'com.github.MilkBowl:VaultAPI:1.7'

    shadow 'com.vexsoftware:nuvotifier:2.7.1'

    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
}

archivesBaseName = 'original-Milestones'
group = 'space.devport.wertik.milestones'
sourceCompatibility = '8'
version = '2.0.0'

def pluginName = 'Milestones'
def mainClass = project.property("group") + "." + pluginName + "Plugin"

shadowJar {
    archiveBaseName.set(pluginName)
    archiveClassifier.set('')
    archiveVersion.set(project.property("version").toString())
    relocate('space.devport.utils', project.property("group").toString() + ".utils")
}

processResources {
    filter ReplaceTokens, tokens: ["version": version, "name": pluginName, "main_class": mainClass]
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}